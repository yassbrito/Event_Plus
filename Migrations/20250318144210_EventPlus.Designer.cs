// <auto-generated />
using System;
using Event_Plus.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Event_Plus.Migrations
{
    [DbContext(typeof(EventContext))]
    [Migration("20250318144210_EventPlus")]
    partial class EventPlus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Event_Plus.Domains.ComentarioEvento", b =>
                {
                    b.Property<Guid>("ComentarioEventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<Guid>("Evento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EventoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Exibe")
                        .HasColumnType("BIT");

                    b.Property<Guid>("Usuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ComentarioEventoId");

                    b.HasIndex("EventoId");

                    b.HasIndex("UsuarioID");

                    b.ToTable("ComentarioEvento");
                });

            modelBuilder.Entity("Event_Plus.Domains.Evento", b =>
                {
                    b.Property<Guid>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEvento")
                        .HasColumnType("DATE");

                    b.Property<string>("DescricaoEvento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EventoName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<Guid>("InstituicaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TipoEvento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TipoEventoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EventoId");

                    b.HasIndex("InstituicaoId");

                    b.HasIndex("TipoEventoId");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("Event_Plus.Domains.Instituicao", b =>
                {
                    b.Property<Guid>("InstituicaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR(14)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("InstituicaoId");

                    b.HasIndex("CNPJ")
                        .IsUnique();

                    b.ToTable("Instituicao");
                });

            modelBuilder.Entity("Event_Plus.Domains.Presenca", b =>
                {
                    b.Property<Guid>("PresencaEventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Situacao")
                        .HasColumnType("BIT");

                    b.Property<Guid>("UsauarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PresencaEventoId");

                    b.HasIndex("EventoId")
                        .IsUnique();

                    b.HasIndex("Situacao")
                        .IsUnique();

                    b.HasIndex("UsuarioId");

                    b.ToTable("Presenca");
                });

            modelBuilder.Entity("Event_Plus.Domains.TipoEvento", b =>
                {
                    b.Property<Guid>("TipoEventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloTipoEvento")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("TipoEventoId");

                    b.ToTable("TipoEvento");
                });

            modelBuilder.Entity("Event_Plus.Domains.TipoUsuario", b =>
                {
                    b.Property<Guid>("TipoUsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloTipoUsuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("TipoUsuarioId");

                    b.ToTable("TipoUsuario");
                });

            modelBuilder.Entity("Event_Plus.Domains.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(120)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.Property<Guid>("TipoUsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UsuarioId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Event_Plus.Domains.ComentarioEvento", b =>
                {
                    b.HasOne("Event_Plus.Domains.Evento", "Eventos")
                        .WithMany()
                        .HasForeignKey("EventoId");

                    b.HasOne("Event_Plus.Domains.Usuario", "Usuarios")
                        .WithMany()
                        .HasForeignKey("UsuarioID");

                    b.Navigation("Eventos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Event_Plus.Domains.Evento", b =>
                {
                    b.HasOne("Event_Plus.Domains.Instituicao", "Instituicao")
                        .WithMany()
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Plus.Domains.TipoEvento", "TiposEventos")
                        .WithMany()
                        .HasForeignKey("TipoEventoId");

                    b.Navigation("Instituicao");

                    b.Navigation("TiposEventos");
                });

            modelBuilder.Entity("Event_Plus.Domains.Presenca", b =>
                {
                    b.HasOne("Event_Plus.Domains.Evento", "Evento")
                        .WithOne("Presenca")
                        .HasForeignKey("Event_Plus.Domains.Presenca", "EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Event_Plus.Domains.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Event_Plus.Domains.Usuario", b =>
                {
                    b.HasOne("Event_Plus.Domains.TipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("Event_Plus.Domains.Evento", b =>
                {
                    b.Navigation("Presenca");
                });
#pragma warning restore 612, 618
        }
    }
}
